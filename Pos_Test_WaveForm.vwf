/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 10000000000.0;
	SIMULATION_TIME = 10000000000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("nrst")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("divider 1948")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("divider 97")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("new_direction")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("new_direction[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "new_direction";
}

SIGNAL("new_direction[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "new_direction";
}

SIGNAL("new_direction[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "new_direction";
}

SIGNAL("new_direction[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "new_direction";
}

SIGNAL("racket_Y_VGA")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 10;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("racket_Y_VGA[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "racket_Y_VGA";
}

SIGNAL("racket_Y_VGA[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "racket_Y_VGA";
}

SIGNAL("racket_Y_VGA[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "racket_Y_VGA";
}

SIGNAL("racket_Y_VGA[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "racket_Y_VGA";
}

SIGNAL("racket_Y_VGA[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "racket_Y_VGA";
}

SIGNAL("racket_Y_VGA[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "racket_Y_VGA";
}

SIGNAL("racket_Y_VGA[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "racket_Y_VGA";
}

SIGNAL("racket_Y_VGA[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "racket_Y_VGA";
}

SIGNAL("racket_Y_VGA[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "racket_Y_VGA";
}

SIGNAL("racket_Y_VGA[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "racket_Y_VGA";
}

SIGNAL("key_read")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1000;
			LEVEL 0 FOR 5000000.0;
			LEVEL 1 FOR 5000000.0;
		}
	}
}

TRANSITION_LIST("nrst")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10485760.0;
		LEVEL 1 FOR 9989514240.0;
	}
}

TRANSITION_LIST("new_direction[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2264924160.0;
		LEVEL 1 FOR 922746880.0;
		LEVEL 0 FOR 6812328960.0;
	}
}

TRANSITION_LIST("new_direction[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000000000.0;
	}
}

TRANSITION_LIST("new_direction[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 754974720.0;
		LEVEL 1 FOR 503316480.0;
		LEVEL 0 FOR 8741708800.0;
	}
}

TRANSITION_LIST("new_direction[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000000000.0;
	}
}

TRANSITION_LIST("racket_Y_VGA[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000000000.0;
	}
}

TRANSITION_LIST("racket_Y_VGA[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2795000005.171;
		LEVEL 1 FOR 7204999994.829;
	}
}

TRANSITION_LIST("racket_Y_VGA[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 775000005.151;
		LEVEL 1 FOR 2020000000.0;
		LEVEL 0 FOR 7204999994.849;
	}
}

TRANSITION_LIST("racket_Y_VGA[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 775000005.117;
		LEVEL 1 FOR 2020000000.0;
		LEVEL 0 FOR 7204999994.883;
	}
}

TRANSITION_LIST("racket_Y_VGA[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 775000006.622;
		LEVEL 1 FOR 90000000.0;
		LEVEL 0 FOR 1630000000.0;
		LEVEL 1 FOR 300000000.0;
		LEVEL 0 FOR 7204999993.378;
	}
}

TRANSITION_LIST("racket_Y_VGA[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 775000005.159;
		LEVEL 1 FOR 80000000.0;
		LEVEL 0 FOR 10000000.0;
		LEVEL 1 FOR 1420000000.0;
		LEVEL 0 FOR 80000000.0;
		LEVEL 1 FOR 130000000.0;
		LEVEL 0 FOR 210000000.0;
		LEVEL 1 FOR 90000000.0;
		LEVEL 0 FOR 7204999994.841;
	}
}

TRANSITION_LIST("racket_Y_VGA[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 865000005.294;
		LEVEL 1 FOR 120000000.0;
		LEVEL 0 FOR 1300000000.0;
		LEVEL 1 FOR 80000000.0;
		LEVEL 0 FOR 10000000.0;
		LEVEL 1 FOR 120000000.0;
		LEVEL 0 FOR 290000000.0;
		LEVEL 1 FOR 10000000.0;
		LEVEL 0 FOR 120000000.0;
		LEVEL 1 FOR 7084999994.706;
	}
}

TRANSITION_LIST("racket_Y_VGA[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 855000005.21;
		LEVEL 1 FOR 130000000.0;
		LEVEL 0 FOR 1390000000.0;
		LEVEL 1 FOR 330000000.0;
		LEVEL 0 FOR 90000000.0;
		LEVEL 1 FOR 7204999994.79;
	}
}

TRANSITION_LIST("racket_Y_VGA[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 855000005.832;
		LEVEL 1 FOR 10000000.0;
		LEVEL 0 FOR 120000000.0;
		LEVEL 1 FOR 1300000000.0;
		LEVEL 0 FOR 80000000.0;
		LEVEL 1 FOR 10000000.0;
		LEVEL 0 FOR 120000000.0;
		LEVEL 1 FOR 210000000.0;
		LEVEL 0 FOR 80000000.0;
		LEVEL 1 FOR 10000000.0;
		LEVEL 0 FOR 120000000.0;
		LEVEL 1 FOR 7084999994.168;
	}
}

TRANSITION_LIST("racket_Y_VGA[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000000000.0;
	}
}

TRANSITION_LIST("key_read")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 770703360.0;
		LEVEL 1 FOR 13762560.0;
		LEVEL 0 FOR 70123520.0;
		LEVEL 1 FOR 13762560.0;
		LEVEL 0 FOR 112066560.0;
		LEVEL 1 FOR 13762560.0;
		LEVEL 0 FOR 1286471680.0;
		LEVEL 1 FOR 13762560.0;
		LEVEL 0 FOR 70123520.0;
		LEVEL 1 FOR 13762560.0;
		LEVEL 0 FOR 112066560.0;
		LEVEL 1 FOR 13762560.0;
		LEVEL 0 FOR 195952640.0;
		LEVEL 1 FOR 13762560.0;
		LEVEL 0 FOR 70123520.0;
		LEVEL 1 FOR 13762560.0;
		LEVEL 0 FOR 112066560.0;
		LEVEL 1 FOR 13762560.0;
		LEVEL 0 FOR 7076439040.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "nrst";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "divider 1948";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	IS_DIVIDER = ON;
}

DISPLAY_LINE
{
	CHANNEL = "key_read";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "new_direction";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
	CHILDREN = 5, 6, 7, 8;
}

DISPLAY_LINE
{
	CHANNEL = "new_direction[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "new_direction[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "new_direction[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "new_direction[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "divider 97";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
	IS_DIVIDER = ON;
}

DISPLAY_LINE
{
	CHANNEL = "racket_Y_VGA";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
	CHILDREN = 11, 12, 13, 14, 15, 16, 17, 18, 19, 20;
}

DISPLAY_LINE
{
	CHANNEL = "racket_Y_VGA[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "racket_Y_VGA[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "racket_Y_VGA[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "racket_Y_VGA[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "racket_Y_VGA[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "racket_Y_VGA[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "racket_Y_VGA[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "racket_Y_VGA[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "racket_Y_VGA[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "racket_Y_VGA[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 10;
}

TIME_BAR
{
	TIME = 31375;
	MASTER = TRUE;
}
;
